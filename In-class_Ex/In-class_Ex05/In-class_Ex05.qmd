---
title: "In-class Ex05"
author: "Johsuan Huang"
date: 2024-02-15
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

## 1 Installing and Importing the data

```{r}
pacman::p_load(tidyverse, readxl, SmartEDA,easystats,
               gtsummary,ggthemes, ggstatsplot)
```

```{r}
# import "data" sheet only
car_resale <- read_xls("data/ToyotaCorolla.xls","data")
```

## 2 Data Overview

### 2.1 Check Data with R packages

::: panel-tabset
## summary

```{r}
summary(car_resale)
```

## str

```{r}
str(car_resale)
```

## glimpse

```{r}
glimpse(car_resale)
```
:::

### 2.2 Check Data Using ExpData()

::: panel-tabset
## Type 1

Type 1 is overall data summary;

-   **Having complete case**: It means no missing value

```{r}
car_resale %>%
  # explore data
  ExpData(type = 1) 

```

## Type 2

Type 2 is variable level summary

```{r}
car_resale %>%
  # explore data
  ExpData(type = 2) 
```
:::

### 2.3 Re-Import Data Again and Transform Data Type

```{r}
# Define selected columns correctly
cols <- c("Mfg_Month", "HP_Bin", "CC_bin", "Doors", "Gears", "Cylinders",
          "Fuel_Type", "Color", "Met_Color", "Automatic", "Mfr_Guarantee",
          "BOVAG_Guarantee", "ABS","Airbag_1", "Airbag_2", "Airco",
          "Automatic_airco", "Boardcomputer", 
          "CD_Player", "Central_Lock", "Powered_Windows", "Power_Steering",
          "Radio","Mistlamps", "Sport_Model", "Backseat_Divider", "Metallic_Rim", 
          "Radio_cassette", "Tow_Bar")  

# Read the dataset
car_resale <- read_xls("data/ToyotaCorolla.xls", sheet = "data") %>%
  mutate(Id = as.character(Id)) %>%  
  mutate(across(all_of(cols), as.factor))  # Convert selected columns to factors

```

## 3 Explore Data Using SmartEDA Packages

### 3.1 Explore Numerical Attributes

```{r}
car_resale %>%
  ExpNumViz(target = NULL,
            nlim = 10,
            Page=c(2,2))

```

```{r}
car_resale %>%
  ExpNumViz(target = "Price",
            nlim = 10,
            Page=c(2,2),
            col = "#96C6D999")
```

### 3.2 Explore Categorical Attributes

The default fig.width = 7 and fig.width = 5 in R markdown, but we can overwrite fig-width and height in Quarto. Let's plot bar charts for all cat variables:

```{r}
#| fig-width: 12
#| fig-height: 10

car_resale %>%
  ExpCatViz(target = NULL,
            clim = 10,
            col = "#96C6D999",
            margin = 2,
            Page=c(4,4),
            sample = 16)
```

## 4 Fit Linear Regression Model

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + Weight +
              Guarantee_Period, data = car_resale)

```

### 4.1 Check Normality with Parameters package

```{r}
check_normality(model)
```

### 4.2 Check Collinearity with Parameters package

```{r}
check_collinearity(model)
```

The plot indicates benchmark of VIF for us easily to check which variables have potential issue. As the plot shows below, "Age_08_04" and "Mfg_Year" have high VIF

```{r}
# it will organize the result into dataframe
check_c <- check_collinearity(model)
# use see package to draw collinearity plot
plot(check_c)
```

## 5 Remove  "Mfg_Year" and fit the model again

```{r}

model1 <- lm(Price ~ Age_08_04 + KM + Weight +
              Guarantee_Period, data = car_resale)
check_normality(model1)
```

The plot shows the model have heteroscedasticity:

```{r}
#| fig-width: 12
#| fig-height: 10

check_model(model1)
```

## 6 gtsummary Packages

### 6.1 Default summary of R

```{r}
summary(model1)
```

### 6.2 Use gtsummary to format the layout of the summary

It also offer formatting for other tests like ANOVA tests.

```{r}
tbl_regression(model1, intercept = TRUE) %>%
  add_glance_source_note(
    label = list(sigma ~ "\U03C3"), #extract sigma sign
    include = c(r.squared, adj.r.squared,
                AIC, statistic,
                p.value,sigma)
  )
```

```{r}
p1 <- parameters(model1)
```

```{r}
plot(parameters(model1))
```

`ggcoefstats()` gives more information compared to `parameters()`

```{r}
ggcoefstats(model1, output = "plot")

```
