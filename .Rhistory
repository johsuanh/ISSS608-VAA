title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS)) +
stat_pointinterval(.width = c(0.95,0.99),
.point = mean,
.interval = qi,
.orientation = "na") +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("#6a994e", "#bc4749"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3)))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS)) +
stat_pointinterval(.width = c(0.95,0.99),
.point = mean,
.interval = qi,
.orientation = "na") +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("#6a994e", "#bc4749"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS)) +
stat_pointinterval(.width = c(0.95,0.99),
.point = mean,
.interval = qi,
.orientation = "na") +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("#6a994e", "#E8C8DB"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS)) +
stat_pointinterval(.width = c(0.95,0.99),
.point = mean,
.interval = qi,
.orientation = "na") +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("#A4A8D9", "#E8C8DB"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS)) +
stat_pointinterval(.width = c(0.95,0.99),
.point = mean,
.interval = qi,
.orientation = "na") +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("#6a994e", "#E8C8DB"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple of interval plot of 95% and 99% levels")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS))+
stat_gradientinterval(
fill = "grey30",
show.legend = TRUE)+
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Gradient + interval plot")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
legend.background = element_rect(fill = "#f3f1e9",color = NA))
#| echo: false
exam %>%
ggplot(aes(x = RACE, y = MATHS))+
stat_gradientinterval(
fill = "grey30",
show.legend = TRUE)+
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Gradient + interval plot")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
legend.background = element_rect(fill = "#f3f1e9",color = NA),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
ggplot(data = exam,
(aes(x = factor(RACE),
y = MATHS))) +
geom_point(position = position_jitter(
height = 0.3,
width = 0.05),
size = 0.4,
color = "#0072B2",
alpha = 1/2) +
geom_hpline(data = sampler(25, group = RACE),
height = 0.6,
color = "#D55E00") +
theme_bw() +
transition_states(.draw, 1, 3)+
labs(x="Race",y="Math Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(data = exam,
(aes(x = factor(RACE),
y = MATHS))) +
geom_point(position = position_jitter(
height = 0.3,
width = 0.05),
size = 0.4,
color = "grey70",
alpha = 1/2) +
geom_hpline(data = sampler(25, group = RACE),
height = 0.6,
color = "#D9A4C3") +
theme_bw() +
transition_states(.draw, 1, 3)+
labs(x="Race",y="Math Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(data = exam,
(aes(x = factor(RACE),
y = MATHS))) +
geom_point(position = position_jitter(
height = 0.3,
width = 0.05),
size = 0.4,
color = "grey40",
alpha = 1/2) +
geom_hpline(data = sampler(25, group = RACE),
height = 0.6,
color = "#D9A4C3") +
theme_bw() +
transition_states(.draw, 1, 3)+
labs(x="Race",y="Math Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
exam %>%
ggplot(aes(x = RACE,
y = MATHS)) +
stat_pointinterval() +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("grey30", "black"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple-interval plot of 66% and 95%")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE,
y = MATHS)) +
stat_pointinterval() +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("black", "grey50"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple-interval plot of 66% and 95%")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE,
y = MATHS)) +
stat_pointinterval() +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("grey20", "grey50"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple-interval plot of 66% and 95%")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
#| echo: false
exam %>%
ggplot(aes(x = RACE,
y = MATHS)) +
stat_pointinterval() +
aes(interval_color=stat(level)) +
scale_color_manual(
values = c("grey20", "grey50"), # customize colors for 95% and 99% CI
aesthetics = "interval_color") +
labs(
title = "Visualising confidence intervals of mean math score",
subtitle = "Mean Point + Multiple-interval plot of 66% and 95%")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.background = element_rect(fill = "#f3f1e9"),
plot.title = element_text(face = "bold"),
axis.line.x = element_line(linewidth = 0.3),
axis.line.y = element_line(linewidth = 0.3))
by(exam$ENGLISH, exam$GENDER, shapiro.test)
by(exam$ENGLISH, exam$GENDER, shapiro.test)
by(exam$MATHS, exam$GENDER, shapiro.test)
by(exam$MATHS, exam$RACE, shapiro.test)
by(exam$ENGLISH, exam$RACE, shapiro.test)
pacman::p_load(haven, tidyverse, smartEDA, tidymodels)
pacman::p_load(haven, tidyverse, SmartEDA, tidymodels)
exam <- read_csv("data/Exam_data.csv")
exam <- read_csv("data/Exam_data.csv")
churn_data <- read_sas("data/churn_telecom.sas7bdat")
churn_data <- read_sas("data/churn_telecom.sas7bdat")
churn_data <- read_sas("data/churn_telecom.sas7bdat")
churn_data
exam <- read_csv("data/Exam_data.csv")
ggplot(exam, aes(x=ENGLISH, y=CLASS))+
geom_boxplot()
ggplot(exam, aes(x=ENGLISH, y=CLASS))+
geom_boxplot()+
labs(title ="English Score by Class")
ggplot(exam, aes(x=ENGLISH, y=CLASS))+
geom_boxplot()+
labs(title ="English Score by Class")+
theme_classic()+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
theme_classic()+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(aes(fill = RACE),
alpha = 0.5,
adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
stat_dots(
side = "left",
justification = 1.2,
binwidth = NA,
dotsize = 2
)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
coord_flip() +
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.position = 'none',
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(aes(fill = RACE),
alpha = 0.5,
adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
stat_dots(
side = "left",
justification = 1.2,
binwidth = NA,
dotsize = 1
)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
coord_flip() +
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.position = 'none',
plot.title = element_text(face = "bold"))
#| echo: false
ggplot(exam,
aes(x = RACE,y = ENGLISH)) +
stat_halfeye(aes(fill = RACE),
alpha = 0.5,
adjust = 0.5,
justification = -0.2,
.width = 0,
point_colour = NA)+
geom_boxplot(width = 0.20,
outlier.shape = NA)+
stat_dots(
side = "left",
justification = 1.2,
binwidth = NA,
dotsize = 2
)+
labs(title ="Distribution of English Scores Across Races",
x = "", y="English Score")+
coord_flip() +
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA),
legend.position = 'none',
plot.title = element_text(face = "bold"))
#| echo: false
ggbetweenstats(
data = exam,
x = GENDER,
y = MATHS,
type = "np", #nonparametric
messages = TRUE)+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
pacman::p_load(ggstatsplot, tidyverse, nortest)
exam <- read_csv("data/Exam_data.csv")
head(exam)
str(exam)
summary(exam)
any(is.na(exam))
col <- c("CLASS","GENDER","RACE")
exam <- exam %>% mutate(across(all_of(col), as.factor))
head(exam)
#| echo: false
set.seed(1)
gghistostats(exam,
x = ENGLISH,
type = "bayes",
test.value = 60, #mu
xlab = "English scores",
bin.args = list(fill = "grey90", color="grey30"),
centrality.line.args = list(color = "black", linewidth = 1, linetype = "dashed"))+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
ad.test(exam$ENGLISH)
#| echo: false
set.seed(1)
gghistostats(exam,
x = ENGLISH,
type = "np",
test.value = 60, #mu
xlab = "English scores",
bin.args = list(fill = "grey90", color="grey30"),
centrality.line.args = list(color = "black", linewidth = 1, linetype = "dashed"))+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
by(exam$MATHS, exam$GENDER, shapiro.test)
#| echo: false
ggbetweenstats(
data = exam,
x = GENDER,
y = MATHS,
type = "np", #nonparametric
messages = TRUE)+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
#| echo: false
ggbetweenstats(
data = exam,
x = GENDER,
y = MATHS,
type = "np", #nonparametric
messages = FALSE)+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
#| echo: false
ggbetweenstats(
data = exam,
x = RACE,
y = ENGLISH,
type = "p",
mean.ci = TRUE,
pairwise.comparisons = TRUE,
pairwise.display = "s",
p.adjust.method = "fdr",
messages = FALSE
)+
theme(panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA))
ggbarstats(exam1,
x = MATHS_bins,
y = GENDER)+
theme(legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA
))
exam1 <- exam %>%
mutate(MATHS_bins=
cut(MATHS, breaks = c(0,60,75,85,100)))
head(exam1)
ggbarstats(exam1,
x = MATHS_bins,
y = GENDER)+
theme(legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA
))
check_h <- check_heteroscedasticity(model1)
plot(check_h)+
theme(legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9",color = NA
))
model1 <- lm(Price ~ Age_08_04 + KM +
Weight + Guarantee_Period, data = car_resale)
