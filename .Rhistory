gc()
gc()
pacman::p_load(tidyverse)
exam_data <- read_csv("Hands-on_Ex/Hands-on_Ex01/data/Exam_data.csv")
exam_data <- read_csv("Hands-on_Ex/Hands-on_Ex01/data/Exam_data.csv")
exam_data <- read_csv("data/Exam_data.csv")
hist(exam_data$MATHS)
hist(exam_data$MATHS)
ggplot(data=exam_data, aes(x=MATHS)) +
geom_histogram(bins=10,
boundary=100,
color="black",
fill="grey") +
ggtitle("Distribution of Maths scores")
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#C8CBE8") +
ggtitle("Distribution of Maths scores")
library(ggplot2)
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#C8CBE8") +
ggtitle("Distribution of Maths scores")
pacman::p_load(tidyverse)
exam_data <- read_csv("data/Exam_data.csv")
hist(exam_data$MATHS)
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#C8CBE8") +
ggtitle("Distribution of Maths scores")
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#C8CBE8") +
ggtitle("Distribution of Maths scores")+
theme_classic()
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="grey") +
ggtitle("Distribution of Maths scores")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="grey") +
ggtitle("Distribution of Maths scores")+
theme_classic(plot.title = element_text(hjust = 0.5))
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="grey") +
ggtitle("Distribution of Maths scores")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5), face="bold")
ggplot(data=exam_data, aes(x=MATHS)) +
# using geom_histogram() draw hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="grey") +
ggtitle("Distribution of Maths scores")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar()
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(dotsize = 0.5)
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5)+
# use scale_y_continuous() to turn off y-axis
scale_y_continuous(NULL,
breaks=NULL)
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram()
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black"
fill="#E8E5C8")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black"
fill= #E8E5C8)
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black"
fill="#E8E5C8")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8E5C8")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#C8E8D5")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5
color = "black",
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5,
color = "black",
fill="#E8C8DB")+
# use scale_y_continuous() to turn off y-axis
scale_y_continuous(NULL,
breaks=NULL)
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5,
fill="#E8C8DB")+
# use scale_y_continuous() to turn off y-axis
scale_y_continuous(NULL,
breaks=NULL)
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar(color="black",
fill="#E8C8DB"
)
ggplot(data=exam_data, aes(x=MATHS)) +
# use geom_histogram() to create a hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#E8C8DB") +
ggtitle("Distribution of Maths scores")+
# setting a clean background
theme_classic()+
# add and adjust the weight of the title
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black"
fill=("#E8C8DB","#C8E8D5"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
scale_fill_manual(values = c("#E8C8DB", "#C8E8D5"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
scale_fill_manual(values = c("#E8C8DB", "#C8CBE8"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=MATHS))+
geom_density()
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black",
fill = GENDER)+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()+
# customize the fill color
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data, aes(x=MATHS)) +
# use geom_histogram() to create a hist plot
geom_histogram(bins=10,
boundary=100,
color="black",
fill="#E8C8DB") +
ggtitle("Distribution of Maths scores")+
# setting a clean background
theme_classic()+
# add and adjust the weight of the title
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS))+
geom_density()
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()+
# customize the color
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS)+
geom_boxplot()
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS)+
geom_boxplot())
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS))+
geom_boxplot()
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS))+
geom_boxplot(notch = True)
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS))+
geom_boxplot(notch = TRUE)
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS))+
geom_violin()
ggplot(data = exam_data,
aes(x = MATHS,
y = ENGLISH))+
geom_point()
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS))+
geom_boxplot()+
# customize the color
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS))+
geom_boxplot()+
# customize the color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
# customize the color
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS
fill=GENDER))+
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS,
fill=GENDER))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
# customize the color
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_boxplot(notch = TRUE)+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS
fill = GENDER))+
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_violin()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data = exam_data,
aes(x = MATHS,
y = ENGLISH,
color = GENDER))+
geom_point()+
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar(color="black",
fill="#E8C8DB")+
theme_classic()
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5,
fill="#E8C8DB")+
# use scale_y_continuous() to turn off y-axis
theme_classic()+
scale_y_continuous(NULL,
breaks=NULL)
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar(color="black",
fill="#E8C8DB")+
theme_classic()+
ggtitle("Distribution of Race")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()+
# customize the color
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS))+
geom_density()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS,
# add "fill" to customize boxplot's colors
fill=GENDER))+
geom_boxplot()+
# customize the color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_boxplot(notch = TRUE)+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_violin()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = MATHS,
y = ENGLISH,
color = GENDER))+
geom_point()+
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = MATHS,
y = GENDER,
fill = GENDER,
color = GENDER))+
geom_point()+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point()+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point(position = "jitter", size=0.5)+
geom_boxplot()+
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = bold, hjust = 0.5))
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = "bold", hjust = 0.5))
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = "bold", hjust = 0.5))+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
usethis::use_git()
usethis::use_github()
git add johsuanh/ISSS608-VAA
