names_to = "metric",
values_to = "value")
# summary for tooltips
ship_metrics_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE),
avg_margin = mean(Margin_per_Voyage, na.rm = TRUE),
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
)
# Create the combined dataframe with correct tooltips
ship_combined <- bind_rows(
ship_rev %>% mutate(category = "Revenue"),
ship_margin %>% mutate(category = "Profitability"),
ship_op_efficiency %>% mutate(category = "Cost Efficiency")
) %>%
left_join(ship_metrics_summary, by = "Route_Type") %>%
mutate(
tooltip = case_when(
metric == "avg_revenue" ~ sprintf("Ship Type: %s\nRevenue: %.2f K", type_size, value),
metric == "avg_margin" ~ sprintf("Ship Type: %s\nProfit Margin: %.2f%%", type_size, value),
metric == "avg_cost_nm" ~ sprintf("Ship Type: %s\nCost per nm: %.2f", type_size, value)
)
)
#| echo: false
#| fig-height: 6
#| fig-width: 12
#| out-extra: "style='max-width:100%; display: block;'"
#| out-width: 100%
# Create a summary dataframe for total revenue per ship_engine for sorting purpose
ship_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(mean_margin_all = mean(Margin_per_Voyage, na.rm = TRUE)) %>%
arrange(mean_margin_all)
# Create the long format dataframe for rev & p >> column 1
ship_rev <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE)) %>%
pivot_longer(cols = c(avg_revenue),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 2
ship_margin <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_margin =mean(Margin_per_Voyage, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_margin),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 3
ship_op_efficiency <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_cost_nm),
names_to = "metric",
values_to = "value")
# summary for tooltips
ship_metrics_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE),
avg_margin = mean(Margin_per_Voyage, na.rm = TRUE),
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
)
# Create the combined dataframe with correct tooltips
ship_combined <- bind_rows(
ship_rev %>% mutate(category = "Revenue"),
ship_margin %>% mutate(category = "Profitability"),
ship_op_efficiency %>% mutate(category = "Cost Efficiency")
) %>%
left_join(ship_metrics_summary, by = "Route_Type") %>%
mutate(
tooltip = case_when(
metric == "avg_revenue" ~ sprintf("Ship Type: %s\nRevenue: %.2f K", Route_Type, value),
metric == "avg_margin" ~ sprintf("Ship Type: %s\nProfit Margin: %.2f%%", Route_Type, value),
metric == "avg_cost_nm" ~ sprintf("Ship Type: %s\nCost per nm: %.2f", Route_Type, value)
)
)
# avg ref line
avg_revenue <- mean(ship_metrics_summary$avg_revenue, na.rm = TRUE)
avg_margin <- mean(ship_metrics_summary$avg_margin, na.rm = TRUE)
avg_cost <- mean(ship_metrics_summary$avg_cost_nm, na.rm = TRUE)
# Plot with Facet & Hover
p <- ggplot(ship_combined,
aes(x = case_when(
category == "Revenue" ~ factor(type_size,
levels = ship_summary$type_size),
category == "Profitability" ~ factor(type_size,
levels = ship_summary$type_size),
category == "Cost Efficiency" ~ factor(type_size,
levels = ship_summary$type_size)
),
y = value,
fill = metric)) +
geom_bar_interactive(stat = "identity",
position = position_dodge(width = 0.7),
aes(tooltip = tooltip,
data_id = type_size),
width = 0.5) +
# Reference line using geom_hline
geom_hline(data = data.frame(
category = c("Revenue", "Profitability", "Cost Efficiency"),
avg_value = c(avg_revenue, avg_margin, avg_cost)
),
aes(yintercept = avg_value, linetype = "Mean*"),
color = "black",
size = 0.5
) +
coord_flip() +
facet_wrap(~ factor(category,
levels = c("Profitability", "Revenue", "Cost Efficiency")),
scales = "free_x") +
labs(
title = "Sailing Towards Profit: Which Ship Types Lead the Way?",
subtitle = "The Medium Fish Carrier reigns as the top performer, with a revenue of 595K and a profit margin of 36.6%. \nIn contrast, the Medium Bulk Carrier underperforms, generating 516K in revenue and the lowest margin at 7.4%",
caption = "*Mean Margin = 21.3%\n*Mean Revenue = 523K\n*Mean Cost per nm = 2.31",
x = "Ship Type",
y = "",
fill = "Metric"
) +
theme_classic() +
scale_fill_manual(values = my_palette) +
scale_linetype_manual(name = "Reference",
values = c("Mean*" = "dashed","Median"="dashed")) +
guides(
fill = guide_legend(order = 1),
linetype = guide_legend(order = 2) #adding line type legend
) +
theme(
axis.text.y = element_text(size = 6,color="grey20"),
axis.text.x = element_text(size = 6,color="grey20"),
axis.title.x = element_text(size = 8,color="grey20"),
axis.title.y = element_text(size = 8,color="grey20"),
strip.text = element_text(size = 7, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 6),
legend.key.size = unit(0.2, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9", color = NA),
plot.title = element_text(size = 11,hjust = 0.5,face='bold'),
plot.subtitle = element_text(size = 6, hjust = 0, lineheight = 1.1),
plot.caption = element_text(size = 6,color="grey40"),
plot.margin = margin(10, 50, 10 ,30),
panel.spacing = unit(1, "lines"),
strip.placement = "outside",
strip.switch.pad.wrap = unit(2, "cm")
)
tooltip_css <- "background-color:white; font-style: bold; font-size:10px; color:black; border-radius: 5px; margin: 3px; padding:3px;"
# Convert to Interactive
girafe(
code = print(p),
width_svg = 6,
height_svg = 4,
options = list(
opts_hover(css = "stroke-width:3px; opacity: 1;"),
opts_hover_inv(css = "opacity: 0.2;"),
opts_tooltip(css = tooltip_css)
))
#| echo: false
#| fig-height: 6
#| fig-width: 12
#| out-extra: "style='max-width:100%; display: block;'"
#| out-width: 100%
# Create a summary dataframe for total revenue per ship_engine for sorting purpose
ship_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(mean_margin_all = mean(Margin_per_Voyage, na.rm = TRUE)) %>%
arrange(mean_margin_all)
# Create the long format dataframe for rev & p >> column 1
ship_rev <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE)) %>%
pivot_longer(cols = c(avg_revenue),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 2
ship_margin <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_margin =mean(Margin_per_Voyage, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_margin),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 3
ship_op_efficiency <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_cost_nm),
names_to = "metric",
values_to = "value")
# summary for tooltips
ship_metrics_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE),
avg_margin = mean(Margin_per_Voyage, na.rm = TRUE),
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
)
# Create the combined dataframe with correct tooltips
ship_combined <- bind_rows(
ship_rev %>% mutate(category = "Revenue"),
ship_margin %>% mutate(category = "Profitability"),
ship_op_efficiency %>% mutate(category = "Cost Efficiency")
) %>%
left_join(ship_metrics_summary, by = "Route_Type") %>%
mutate(
tooltip = case_when(
metric == "avg_revenue" ~ sprintf("Ship Type: %s\nRevenue: %.2f K", Route_Type, value),
metric == "avg_margin" ~ sprintf("Ship Type: %s\nProfit Margin: %.2f%%", Route_Type, value),
metric == "avg_cost_nm" ~ sprintf("Ship Type: %s\nCost per nm: %.2f", Route_Type, value)
)
)
# avg ref line
avg_revenue <- mean(ship_metrics_summary$avg_revenue, na.rm = TRUE)
avg_margin <- mean(ship_metrics_summary$avg_margin, na.rm = TRUE)
avg_cost <- mean(ship_metrics_summary$avg_cost_nm, na.rm = TRUE)
# Plot with Facet & Hover
p <- ggplot(ship_combined,
aes(x = case_when(
category == "Revenue" ~ factor(Route_Type,
levels = ship_summary$Route_Type),
category == "Profitability" ~ factor(Route_Type,
levels = ship_summary$Route_Type),
category == "Cost Efficiency" ~ factor(Route_Type,
levels = ship_summary$Route_Type)
),
y = value,
fill = metric)) +
geom_bar_interactive(stat = "identity",
position = position_dodge(width = 0.7),
aes(tooltip = tooltip,
data_id = Route_Type),
width = 0.5) +
# Reference line using geom_hline
geom_hline(data = data.frame(
category = c("Revenue", "Profitability", "Cost Efficiency"),
avg_value = c(avg_revenue, avg_margin, avg_cost)
),
aes(yintercept = avg_value, linetype = "Mean*"),
color = "black",
size = 0.5
) +
coord_flip() +
facet_wrap(~ factor(category,
levels = c("Profitability", "Revenue", "Cost Efficiency")),
scales = "free_x") +
labs(
title = "Sailing Towards Profit: Which Ship Types Lead the Way?",
subtitle = "The Medium Fish Carrier reigns as the top performer, with a revenue of 595K and a profit margin of 36.6%. \nIn contrast, the Medium Bulk Carrier underperforms, generating 516K in revenue and the lowest margin at 7.4%",
caption = "*Mean Margin = 21.3%\n*Mean Revenue = 523K\n*Mean Cost per nm = 2.31",
x = "Ship Type",
y = "",
fill = "Metric"
) +
theme_classic() +
scale_fill_manual(values = my_palette) +
scale_linetype_manual(name = "Reference",
values = c("Mean*" = "dashed","Median"="dashed")) +
guides(
fill = guide_legend(order = 1),
linetype = guide_legend(order = 2) #adding line type legend
) +
theme(
axis.text.y = element_text(size = 6,color="grey20"),
axis.text.x = element_text(size = 6,color="grey20"),
axis.title.x = element_text(size = 8,color="grey20"),
axis.title.y = element_text(size = 8,color="grey20"),
strip.text = element_text(size = 7, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 6),
legend.key.size = unit(0.2, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9", color = NA),
plot.title = element_text(size = 11,hjust = 0.5,face='bold'),
plot.subtitle = element_text(size = 6, hjust = 0, lineheight = 1.1),
plot.caption = element_text(size = 6,color="grey40"),
plot.margin = margin(10, 50, 10 ,30),
panel.spacing = unit(1, "lines"),
strip.placement = "outside",
strip.switch.pad.wrap = unit(2, "cm")
)
tooltip_css <- "background-color:white; font-style: bold; font-size:10px; color:black; border-radius: 5px; margin: 3px; padding:3px;"
# Convert to Interactive
girafe(
code = print(p),
width_svg = 6,
height_svg = 4,
options = list(
opts_hover(css = "stroke-width:3px; opacity: 1;"),
opts_hover_inv(css = "opacity: 0.2;"),
opts_tooltip(css = tooltip_css)
))
#| echo: false
#| fig-height: 6
#| fig-width: 12
#| out-extra: "style='max-width:100%; display: block;'"
#| out-width: 100%
# Create a summary dataframe for total revenue per ship_engine for sorting purpose
ship_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(mean_margin_all = mean(Margin_per_Voyage, na.rm = TRUE)) %>%
arrange(mean_margin_all)
# Create the long format dataframe for rev & p >> column 1
ship_rev <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE)) %>%
pivot_longer(cols = c(avg_revenue),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 2
ship_margin <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_margin =mean(Margin_per_Voyage, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_margin),
names_to = "metric",
values_to = "value")
# Create the long format dataframe for growth rate and margin >> column 3
ship_op_efficiency <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
) %>%
pivot_longer(cols = c(avg_cost_nm),
names_to = "metric",
values_to = "value")
# summary for tooltips
ship_metrics_summary <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(
avg_revenue = mean(Revenue_per_Voyage_k, na.rm = TRUE),
avg_margin = mean(Margin_per_Voyage, na.rm = TRUE),
avg_cost_nm = mean(Cost_per_nm, na.rm = TRUE)
)
# Create the combined dataframe with correct tooltips
ship_combined <- bind_rows(
ship_rev %>% mutate(category = "Revenue"),
ship_margin %>% mutate(category = "Profitability"),
ship_op_efficiency %>% mutate(category = "Cost Efficiency")
) %>%
left_join(ship_metrics_summary, by = "Route_Type") %>%
mutate(
tooltip = case_when(
metric == "avg_revenue" ~ sprintf("Ship Type: %s\nRevenue: %.2f K", Route_Type, value),
metric == "avg_margin" ~ sprintf("Ship Type: %s\nProfit Margin: %.2f%%", Route_Type, value),
metric == "avg_cost_nm" ~ sprintf("Ship Type: %s\nCost per nm: %.2f", Route_Type, value)
)
)
# avg ref line
avg_revenue <- mean(ship_metrics_summary$avg_revenue, na.rm = TRUE)
avg_margin <- mean(ship_metrics_summary$avg_margin, na.rm = TRUE)
avg_cost <- mean(ship_metrics_summary$avg_cost_nm, na.rm = TRUE)
# Plot with Facet & Hover
p <- ggplot(ship_combined,
aes(x = case_when(
category == "Revenue" ~ factor(Route_Type,
levels = ship_summary$Route_Type),
category == "Profitability" ~ factor(Route_Type,
levels = ship_summary$Route_Type),
category == "Cost Efficiency" ~ factor(Route_Type,
levels = ship_summary$Route_Type)
),
y = value,
fill = metric)) +
geom_bar_interactive(stat = "identity",
position = position_dodge(width = 0.7),
aes(tooltip = tooltip,
data_id = Route_Type),
width = 0.5) +
# Reference line using geom_hline
geom_hline(data = data.frame(
category = c("Revenue", "Profitability", "Cost Efficiency"),
avg_value = c(avg_revenue, avg_margin, avg_cost)
),
aes(yintercept = avg_value, linetype = "Mean*"),
color = "black",
size = 0.5
) +
coord_flip() +
facet_wrap(~ factor(category,
levels = c("Profitability", "Revenue", "Cost Efficiency")),
scales = "free_x") +
labs(
title = "Sailing Towards Profit: Which Route Types Lead the Way?",
subtitle = "The plot indicates that short-term routes generally yield higher profit margins and better cost efficiency.\nNotably, coastal routes achieve the highest profit margin of 25.12% while maintaining the lowest cost per nautical mile at 2",
x = "Route Type",
y = "",
fill = "Metric"
) +
theme_classic() +
scale_fill_manual(values = my_palette) +
scale_linetype_manual(name = "Reference",
values = c("Mean*" = "dashed","Median"="dashed")) +
guides(
fill = guide_legend(order = 1),
linetype = guide_legend(order = 2) #adding line type legend
) +
theme(
axis.text.y = element_text(size = 6,color="grey20"),
axis.text.x = element_text(size = 6,color="grey20"),
axis.title.x = element_text(size = 8,color="grey20"),
axis.title.y = element_text(size = 8,color="grey20"),
strip.text = element_text(size = 7, face = "bold"),
legend.position = "top",
legend.title = element_text(size = 6),
legend.key.size = unit(0.2, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = "#f3f1e9"),
panel.background = element_rect(fill = "#f3f1e9"),
plot.background = element_rect(fill = "#f3f1e9", color = NA),
plot.title = element_text(size = 11,hjust = 0.5,face='bold'),
plot.subtitle = element_text(size = 6, hjust = 0, lineheight = 1.1),
plot.caption = element_text(size = 6,color="grey40"),
plot.margin = margin(10, 50, 10 ,30),
panel.spacing = unit(1, "lines"),
strip.placement = "outside",
strip.switch.pad.wrap = unit(2, "cm")
)
tooltip_css <- "background-color:white; font-style: bold; font-size:10px; color:black; border-radius: 5px; margin: 3px; padding:3px;"
# Convert to Interactive
girafe(
code = print(p),
width_svg = 6,
height_svg = 4,
options = list(
opts_hover(css = "stroke-width:3px; opacity: 1;"),
opts_hover_inv(css = "opacity: 0.2;"),
opts_tooltip(css = tooltip_css)
))
# Kruskal-Wallis test with both Route_Type and Ship_Type
kruskal_test_margin <- kruskal.test(Margin_per_Voyage ~ type_size, data = ship_cleaned)
kruskal_test_rev <- kruskal.test(Revenue_per_Voyage_k ~ type_size, data = ship_cleaned)
kruskal_test_costnm <- kruskal.test(Cost_per_nm ~ type_size, data = ship_cleaned)
kruskal_test_margin_r <- kruskal.test(Margin_per_Voyage ~ route_type, data = ship_cleaned)
# Kruskal-Wallis test with both Route_Type and Ship_Type
kruskal_test_margin <- kruskal.test(Margin_per_Voyage ~ type_size, data = ship_cleaned)
kruskal_test_rev <- kruskal.test(Revenue_per_Voyage_k ~ type_size, data = ship_cleaned)
kruskal_test_costnm <- kruskal.test(Cost_per_nm ~ type_size, data = ship_cleaned)
kruskal_test_margin_r <- kruskal.test(Margin_per_Voyage ~ Route_type, data = ship_cleaned)
# Kruskal-Wallis test with both Route_Type and Ship_Type
kruskal_test_margin <- kruskal.test(Margin_per_Voyage ~ type_size, data = ship_cleaned)
kruskal_test_rev <- kruskal.test(Revenue_per_Voyage_k ~ type_size, data = ship_cleaned)
kruskal_test_costnm <- kruskal.test(Cost_per_nm ~ type_size, data = ship_cleaned)
kruskal_test_margin_r <- kruskal.test(Margin_per_Voyage ~ Route_Type, data = ship_cleaned)
kruskal_test_rev_r <- kruskal.test(Revenue_per_Voyage_k ~ Route_Type, data = ship_cleaned)
kruskal_test_costnm_r <- kruskal.test(Cost_per_nm ~ Route_Type, data = ship_cleaned)
print(kruskal_test_margin)
print(kruskal_test_rev)
print(kruskal_test_costnm)
print(kruskal_test_margin_r)
print(kruskal_test_rev_r)
print(kruskal_test_costnm_r)
# Kruskal-Wallis test with both Route_Type and Ship_Type
kruskal_test_margin <- kruskal.test(Margin_per_Voyage ~ type_size, data = ship_cleaned)
kruskal_test_rev <- kruskal.test(Revenue_per_Voyage_k ~ type_size, data = ship_cleaned)
kruskal_test_costnm <- kruskal.test(Cost_per_nm ~ type_size, data = ship_cleaned)
kruskal_test_margin_r <- kruskal.test(Margin_per_Voyage ~ Route_Type, data = ship_cleaned)
kruskal_test_rev_r <- kruskal.test(Revenue_per_Voyage_k ~ Route_Type, data = ship_cleaned)
kruskal_test_costnm_r <- kruskal.test(Cost_per_nm ~ Route_Type, data = ship_cleaned)
print(kruskal_test_margin)
print(kruskal_test_rev)
print(kruskal_test_costnm)
print(kruskal_test_margin_r)
print(kruskal_test_rev_r)
print(kruskal_test_costnm_r)
library(dunn.test)
mean_cnm <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(mean_Cost_per_nm = mean(Cost_per_nm, na.rm = TRUE))
print(mean_cnm)
dunn.test(ship_cleaned$Cost_per_nm, ship_cleaned$Route_Type, kw = TRUE)
library(dunn.test)
mean_cnm <- ship_cleaned %>%
group_by(Route_Type) %>%
summarise(mean_Cost_per_nm = mean(Cost_per_nm, na.rm = TRUE))
print(mean_cnm)
dunn.test(ship_cleaned$Cost_per_nm, ship_cleaned$Route_Type, kw = TRUE)
# Kruskal-Wallis test with both Route_Type and Ship_Type
kruskal_test_margin <- kruskal.test(Margin_per_Voyage ~ type_size, data = ship_cleaned)
kruskal_test_rev <- kruskal.test(Revenue_per_Voyage_k ~ type_size, data = ship_cleaned)
kruskal_test_costnm <- kruskal.test(Cost_per_nm ~ type_size, data = ship_cleaned)
kruskal_test_margin_r <- kruskal.test(Margin_per_Voyage ~ Route_Type, data = ship_cleaned)
kruskal_test_rev_r <- kruskal.test(Revenue_per_Voyage_k ~ Route_Type, data = ship_cleaned)
kruskal_test_costnm_r <- kruskal.test(Cost_per_nm ~ Route_Type, data = ship_cleaned)
print(kruskal_test_margin)
print(kruskal_test_rev)
print(kruskal_test_costnm)
print(kruskal_test_margin_r)
print(kruskal_test_rev_r)
print(kruskal_test_costnm_r)
pacman::p_load(lubridate, zoo, xts
)
pacman::p_load(lubridate, zoo, xts,tidyverse)
read_csv("Data/NY-JFKairport-temperatures.csv")
library(shiny)
runApp('In-class_Ex/In-class_Ex06')
runApp('In-class_Ex/In-class_Ex06')
runApp('In-class_Ex/In-class_Ex06')
