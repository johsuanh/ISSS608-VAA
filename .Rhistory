y=MATHS))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
# customize the color
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS
fill=GENDER))+
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS,
fill=GENDER))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
# customize the color
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_boxplot(notch = TRUE)+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS
fill = GENDER))+
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_violin()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data = exam_data,
aes(x = MATHS,
y = ENGLISH,
color = GENDER))+
geom_point()+
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar(color="black",
fill="#E8C8DB")+
theme_classic()
ggplot(data=exam_data,
aes(x=MATHS))+
geom_dotplot(binwidth=2.5,
dotsize = 0.5,
fill="#E8C8DB")+
# use scale_y_continuous() to turn off y-axis
theme_classic()+
scale_y_continuous(NULL,
breaks=NULL)
ggplot(data=exam_data,
aes(x=RACE))+
geom_bar(color="black",
fill="#E8C8DB")+
theme_classic()+
ggtitle("Distribution of Race")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")
#  default bin is 30
ggplot(data=exam_data,
aes(x=MATHS))+
geom_histogram(bins=20,
color="black",
fill="#E8C8DB")+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,
fill=GENDER))+
geom_histogram(bins=20,
color="black")+
# customize the fill color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS,colour = GENDER))+
geom_density()+
# customize the color
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=MATHS))+
geom_density()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data=exam_data,
aes(x=GENDER,
y=MATHS,
# add "fill" to customize boxplot's colors
fill=GENDER))+
geom_boxplot()+
# customize the color
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_boxplot(notch = TRUE)+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = GENDER,
y = MATHS,
fill = GENDER))+
geom_violin()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = MATHS,
y = ENGLISH,
color = GENDER))+
geom_point()+
scale_color_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = MATHS,
y = GENDER,
fill = GENDER,
color = GENDER))+
geom_point()+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point()+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point(position = "jitter", size=0.5)+
geom_boxplot()+
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER,
color = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = bold, hjust = 0.5))
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = "bold", hjust = 0.5))
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = "bold", hjust = 0.5))+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
usethis::use_git()
usethis::use_github()
git add johsuanh/ISSS608-VAA
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean",
color = "#C8E8D5",
size = 3
)
pacman::p_load(tidyverse)
exam_data <- read_csv("data/Exam_data.csv")
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean",
color = "#C8E8D5",
size = 3
)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean",
color = "#C8E8D5",
size = 3
)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_point()+
geom_smooth(size=0.5)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_point(size=0.5)+
geom_smooth()
ggplot(data = exam_data,
aes(x = Maths, y = English))+
geom_point(size=0.5)+
geom_smooth()
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
geom_smooth(size=0.5)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_boxplot()+
stat_summary(geom = "point",
fun = "mean",
color = "black",
size = 3
)+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))+
stat_summary(geom = "point",
fun = "mean",
color = "black",
size = 3
)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS, fill = GENDER))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))+
stat_summary(geom = "point",
fun = "mean",
color = "black",
size = 3
)
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
# default use loess regression method
geom_smooth(size=0.5)
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
geom_smooth(method = "lm", size=0.5)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS, fill = GENDER))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))+
geom_point(stat = "summary",
fun = "mean",
color = "black",
size = 3
)
ggplot(data = exam_data,
aes(x = GENDER, y = MATHS, fill = GENDER))+
geom_boxplot()+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))+
stat_summary(geom = "point",
fun = "mean",
color = "black",
size = 3
)
ggplot(data = exam_data,
aes(y = MATHS,
x = GENDER,
fill = GENDER))+
geom_point(position = "jitter",
size = 0.5)+
geom_boxplot()+
theme_classic()+
ggtitle("Distribution of Math Scores by Gender")+
theme(plot.title = element_text(face = "bold", hjust = 0.5))+
scale_fill_manual(values = c("#E8C8DB", "#C8DBE8"))
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
# default use loess regression method
geom_smooth(size=0.5)
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
geom_smooth(method = "lm", size=0.5)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram()
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram()+
facet_wrap(~ CLASS)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram()+
facet_wrap(~ CLASS, nrow = 2)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram()+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20)+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20)+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(MATHS,ENGLISH))+
geom_histogram(bins=20)+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(MATHS))+
geom_histogram(bins=20)+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB")+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(MATHS))+
geom_histogram(bins=20,fill="#E8C8DB")+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB")+
theme_classic()+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="grey")+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
coord_flip()
ggplot(data = exam_data,
aes(x = MATHS, y = ENGLISH))+
geom_point()+
geom_smooth(method = "lm", size=0.5)+
# fixes both the y-axis and x-axis range from 0-100
coord_cartesian(xlim = c(0,100),
ylim = c(0,100))
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
coord_flip()
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
coord_flip()+
theme_classic()
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
coord_flip()+
theme_minimal()
summary(exam_data)
glimpse(exam_data)
head(exam_data,5)
summary(exam_data)
ggplot(data=exam_data)
# Load the package
pacman::p_load(tidyverse)
# Import the data
exam_data <- read_csv("data/Exam_data.csv")
ggplot(data=exam_data)
ggplot(data=exam_data,
aes(x= MATHS))
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_wrap(~ gender)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
facet_wrap(~ gender)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
facet_wrap(~ GENDER)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_wrap(~ CLASS, nrow = 3)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
facet_wrap(~ RACE)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
stat_summary(geom = "point", fun = mean, colour ="red", size=1) +
facet_wrap(~ RACE)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
stat_summary(geom = "point", fun = mean, colour ="#E8C8DB", size=1) +
facet_wrap(~ RACE)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
stat_summary(geom = "point", fun = mean, colour ="#C8DBE8", size=1) +
facet_wrap(~ RACE)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
stat_summary(geom = "point", fun = mean, colour ="#C8DBE8", size=2) +
facet_wrap(~ RACE)
ggplot(data = exam_data,
aes(x = CLASS, y = MATHS))+
geom_boxplot() +
stat_summary(geom = "point", fun = mean, colour ="#C8DBE8", size=2) +
facet_grid(~ RACE)
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_wrap(~ CLASS, nrow = 3)+
ggtitle("Distribution of Math Scores by Class")
ggplot(data = exam_data,
aes(x = MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_wrap(~ CLASS, nrow = 3)+
ggtitle("Distribution of Math Scores by Class")+
theme(plot.title = element_text(hjust = 0.5, face="bold"))
ggplot(data = exam_data,
aes(MATHS))+
geom_histogram(bins=20,fill="#E8C8DB",color="black")+
facet_grid(~ CLASS)
ggplot(data = exam_data,
aes(x = RACE))+
geom_bar(bins=20,fill="#E8C8DB",color="black")+
coord_flip()+
theme_bw()
install.packages(c("ggrepel", "ggthemes", "hrbrthemes", "patchwork"))
